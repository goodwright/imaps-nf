/*
========================================================================================
    goodwright/imaps-nf Nextflow config file
========================================================================================
    Config for preparegenome.nf
----------------------------------------------------------------------------------------
*/

includeConfig '../conf/base.config'

params {
    outdir                 = './results'
    publish_dir_mode       = 'copy'
    verbose                = false
    enable_conda           = false
    clip_r1                = 0
    clip_r2                = 0
    three_prime_clip_r1    = 0
    three_prime_clip_r2    = 0
    seq_platform           = ''
    seq_center             = ''
    star_ignore_sjdbgtf    = false

    outFilterMultimapNmax = 1 
    outFilterMultimapScoreRange = 1 
    outSAMattributes = "All" 
    alignSJoverhangMin = 8 
    alignSJDBoverhangMin = 1 
    outFilterType = "BySJout" 
    alignIntronMin = 20 
    alignIntronMax = 1000000 
    outFilterScoreMin = 10  
    alignEndsType = "Extend5pOfRead1"
    twopassMode = "Basic"
}

process {

    withName: 'TRIMGALORE' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'BOWTIE_ALIGN' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'STAR_ALIGN' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'UMITOOLS_DEDUP' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'STAR_SAMTOOLS_INDEX' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'UMITOOLS_SAMTOOLS_INDEX' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'GET_CROSSLINKS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'CROSSLINKS_COVERAGE' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'CROSSLINKS_NORMCOVERAGE' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'FILTER_TRANSCRIPTS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_UMITOOLS_DEDUP' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_STAR_SAMTOOLS_INDEX' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_UMITOOLS_SAMTOOLS_INDEX' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_GET_CROSSLINKS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_CROSSLINKS_COVERAGE' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'TOME_CROSSLINKS_NORMCOVERAGE' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'ICOUNT_SIGXLS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'ICOUNT_SUMMARY' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'ICOUNT_RNAMAPS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'ICOUNT_PEAKS' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'CLIPPY' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'PARACLU_CONVERT' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'PARACLU_PARACLU' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }

    withName: 'PARACLU_CUT' {
        publishDir = [ path: { "${params.outdir}/${task.process.toLowerCase().split(':')[-1]}" } ]
    }
}

profiles {
    test      { includeConfig '../conf/test.config'      }
    iMaps     { includeConfig '../conf/imaps.config'      }
}